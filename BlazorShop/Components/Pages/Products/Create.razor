@page "/products/create"
@inject ApplicationDbContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h2>Criar novo produto</h2>

<EditForm Model="@Model" OnValidSubmit="OnValidSubmitAsync">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    
    <div class="mb-3">
        <label class="form-label">Nome da Produto</label>
        <InputText @bind-Value="Model.Title" class="form-control"/>
        <ValidationMessage For="@(() => Model.Title)"/>
    </div>
    
    <div class="mb-3">
        <label class="form-label">Descrição</label>
            <InputText @bind-Value="Model.Description" class="form-control"/>
            <ValidationMessage For="@(() => Model.Description)"/>
    </div>
    
    <div class="mb-3">
        <label class="form-label">Preço</label>
        <InputNumber @bind-Value="Model.Price" class="form-control"/>
        <ValidationMessage For="@(() => Model.Price)"/>
    </div>
    
    <div class="mb-3">
        <label class="form-label">Categoria</label>
        <InputSelect @bind-Value="Model.CategoryId" class="form-control">
            @foreach (var category in Categories)
            {
                <option value="@category.Id">
                    @category.Title
                </option>
            }
        </InputSelect>
    </div>
    
    <button type="submit" class="btn btn-primary">Criar</button>
    <a class="btn btn-danger" href="/products">Cancelar</a>
</EditForm>

@code
{
    public ProductModel Model { get; set; } = new();
    public IEnumerable<CategoryModel> Categories { get; set; } = Enumerable.Empty<CategoryModel>();

    protected async override Task OnInitializedAsync()
    {
        try
        {
            Categories = await Context.Categories
                .AsNoTracking()
                .OrderBy(x => x.Title)
                .ToListAsync();
        }
        catch (Exception e)
        {
            throw new Exception("Falha interna do servidor");
        }
    }

    public async Task OnValidSubmitAsync()
    {
        try
        {
            await Context.Products.AddAsync(Model);
            await Context.SaveChangesAsync();
            Navigation.NavigateTo("categories");
            
        }
        catch
        {
            throw new Exception("Não foi possível criar um novo produt");
        }
    }
}
